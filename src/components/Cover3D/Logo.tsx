/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.14 public/covermodels/logo.gltf -t -r public 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh
  }
  materials: {
    ['JO2024-texture.001']: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Logo(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/covermodels/logo.gltf') as GLTFResult
  return (
    <group {...props} dispose={null} scale={0.5}>
      <group position={[-0.288, 3.42, -0.21]} rotation={[-Math.PI / 2, 0, -Math.PI / 2]}>
        <mesh geometry={nodes.Object_4.geometry} material={materials['JO2024-texture.001']} rotation={[Math.PI / 2, 0, 0]} />
      </group>
    </group>
  )
}

useGLTF.preload('/covermodels/logo.gltf')
