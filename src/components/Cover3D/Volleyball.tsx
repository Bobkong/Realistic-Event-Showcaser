/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.14 public/covermodels/volleyball.gltf -t -r public 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube022: THREE.Mesh
    Cube022_1: THREE.Mesh
    Cube022_2: THREE.Mesh
    Vert001: THREE.Mesh
    Vert002: THREE.Mesh
  }
  materials: {
    ['White.004']: THREE.MeshStandardMaterial
    ['Blue.002']: THREE.MeshStandardMaterial
    ['Red.003']: THREE.MeshStandardMaterial
    Hand: THREE.MeshStandardMaterial
    ['Black.004']: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Volleyball(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/covermodels/volleyball.gltf') as GLTFResult
  return (
    <group {...props} dispose={null} scale={0.8}>
      <group position={[-0.542, 1.648, 0.262]} rotation={[-1.222, -0.711, 0.29]} scale={0.672}>
        <mesh geometry={nodes.Cube022.geometry} material={materials['White.004']} />
        <mesh geometry={nodes.Cube022_1.geometry} material={materials['Blue.002']} />
        <mesh geometry={nodes.Cube022_2.geometry} material={materials['Red.003']} />
      </group>
      <mesh geometry={nodes.Vert001.geometry} material={materials.Hand} position={[4.757, -2.413, 3.586]} rotation={[-0.091, -0.781, -0.313]} scale={2.468} />
      <mesh geometry={nodes.Vert002.geometry} material={materials['Black.004']} position={[4.757, -2.413, 3.586]} rotation={[-0.091, -0.781, -0.313]} scale={2.468} />
    </group>
  )
}

useGLTF.preload('/covermodels/volleyball.gltf')
