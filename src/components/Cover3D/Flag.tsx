/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.14 public/covermodels/flag.gltf -t -r public 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    mesh_0: THREE.Mesh
  }
  materials: {
    Flag: THREE.MeshStandardMaterial
  }
}

type ActionName = 'KeyAction'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Flag(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/covermodels/flag.gltf') as GLTFResult
  const { actions } = useAnimations<GLTFActions>(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Sketchfab_model" position={[0.081, 3.337, -0.196]} rotation={[-Math.PI / 2, 0, -Math.PI / 2]}>
          <group name="root">
            <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
              <group name="Paris_2024_0" />
            </group>
          </group>
        </group>
        <group name="Sketchfab_model001" position={[-0.011, 1.171, -0.267]} rotation={[-Math.PI / 2, 0, 0]}>
          <group name="root001">
            <group name="GLTF_SceneRootNode001" rotation={[Math.PI / 2, 0, 0]}>
              <group name="RootNode_(gltf_orientation_matrix)_0" rotation={[-Math.PI / 2, 0, 0]}>
                <group name="RootNode_(model_correction_matrix)_1">
                  <group name="root_2">
                    <group name="GLTF_SceneRootNode_3" rotation={[Math.PI / 2, 0, 0]}>
                      <group name="Flag_ShapeKeys_2_4">
                        <group name="mesh_0_5">
                          <mesh name="mesh_0" geometry={nodes.mesh_0.geometry} material={materials.Flag} />
                        </group>
                      </group>
                    </group>
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/covermodels/flag.gltf')
